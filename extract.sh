#!/bin/bash

# Скрипт для рекурсивного обхода проекта (frontend + backend + Docker)
# и вывода содержимого всех релевантных файлов в единый текстовый файл.

# Директории для поиска исходников
SEARCH_DIRS=("./frontend" "./backend")

# Имя выходного файла
OUTPUT_FILE="project_code.txt"

# Проверяем, что все директории существуют
for dir in "${SEARCH_DIRS[@]}"; do
  if [ ! -d "$dir" ]; then
    echo "Ошибка: Директория '$dir' не найдена."
    echo "Пожалуйста, запустите этот скрипт из корневой папки проекта 'Orar-Usarb'."
    exit 1
  fi
done

# Очищаем/создаем выходной файл и записываем заголовок
{
  echo "===================================================================="
  echo "========== НАЧАЛО ВЫВОДА КОДА ПРОЕКТА =========="
  echo "===================================================================="
  echo ""
} > "$OUTPUT_FILE"

# --- 1. Собираем код из frontend и backend ---
for dir in "${SEARCH_DIRS[@]}"; do
  find "$dir" -type f \
    \( -name "*.js" -o -name "*.ts" -o -name "*.jsx" -o -name "*.tsx" -o -name "*.json" -o -name "*.css" \) \
    -not -path "*/node_modules/*" | while read -r file; do
      {
        echo "--------------------------------------------------------------------"
        echo "--- Файл: $file"
        echo "--------------------------------------------------------------------"
        cat "$file"
        echo ""
        echo ""
      } >> "$OUTPUT_FILE"
    done
done

# --- 2. Добавляем Docker-файлы из корня и поддиректорий ---
echo "Добавляем Docker-файлы..."
find . -maxdepth 3 -type f \
  \( -name "Dockerfile" -o -name "docker-compose.yml" -o -name "docker-compose.yaml" -o -name ".dockerignore" \) | while read -r dockerfile; do
    {
      echo "--------------------------------------------------------------------"
      echo "--- Docker-файл: $dockerfile"
      echo "--------------------------------------------------------------------"
      cat "$dockerfile"
      echo ""
      echo ""
    } >> "$OUTPUT_FILE"
  done

# --- 3. Добавляем финальный футер ---
{
  echo "===================================================================="
  echo "========== ЗАВЕРШЕНИЕ ВЫВОДА КОДА ПРОЕКТА =========="
  echo "===================================================================="
} >> "$OUTPUT_FILE"

echo "Готово! Весь код проекта и Docker-конфигурации сохранены в файл: $OUTPUT_FILE"
