import { useState, useEffect, useCallback, useRef, useMemo } from 'react';
// --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ 'format' –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω ---
import { format, getYear } from 'date-fns';
import type { ScheduleEntry, SearchOption, SearchType, MasterLists, ScheduleResponseDto } from '@/types';
// --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–∞—Ç ---
import { getAcademicWeekInfoFromNumber } from '@/utils/academicWeekUtils';

// --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
const LOG_PREFIX_HOOK = "üöÄ [useSchedule.ts]";
const LOG_STYLE_HOOK = "color: #9C27B0; font-weight: bold;";
const LOG_PREFIX_FETCH = "üîÑ [useSchedule.ts]";
const LOG_STYLE_FETCH = "color: #FF5722;";
const LOG_PREFIX_REQ = "üì¶ [useSchedule.ts]";
const LOG_STYLE_REQ = "color: #00BCD4;";
const LOG_PREFIX_RESP = "‚úÖ [useSchedule.ts]";
const LOG_STYLE_RESP = "color: #8BC34A; font-weight: bold;";
const LOG_PREFIX_ERROR = "‚ùå [useSchedule.ts]";
const LOG_STYLE_ERROR = "color: #F44336; font-weight: bold;";
const LOG_PREFIX_FILTER = "üîç [useSchedule.ts]";
const LOG_STYLE_FILTER = "color: #795548;";
const LOG_PREFIX_FINISH = "üèÅ [useSchedule.ts]";
const LOG_STYLE_FINISH = "color: #607D8B;";
// --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–æ–≤—ã–π –ª–æ–≥–≥–µ—Ä ---
const LOG_PREFIX_API_DATA = "API_DATA [useSchedule.ts]";
const LOG_STYLE_API_DATA = "color: #FF00FF; font-weight: bold; background: #333;";
// --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---

// --- –¢–∏–ø–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ö—É–∫–∞ ---
interface UseScheduleParams {
  searchQuery: string;
  searchType: SearchType;
  // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—Ä–∏–Ω–∏–º–∞–µ–º –º–∞—Å—Å–∏–≤ –Ω–µ–¥–µ–ª—å –∏ –¥–∞—Ç—É –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ ---
  academicWeeks: number[];
  dateContext: Date; // –ù—É–∂–Ω–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —É—á–µ–±–Ω–æ–≥–æ –≥–æ–¥–∞
  // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---
  semester: number;
}


export function useSchedule({
  searchQuery,
  searchType,
  // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ---
  academicWeeks,
  dateContext,
  // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---
  semester,
}: UseScheduleParams) {
  console.log(`%c${LOG_PREFIX_HOOK} –•—É–∫ useSchedule. –¢—Ä–µ–±—É–µ–º—ã–µ –Ω–µ–¥–µ–ª–∏: [${academicWeeks.join(', ')}]`, LOG_STYLE_HOOK);

  // --- –°–æ—Å—Ç–æ—è–Ω–∏—è ---
  // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –•—Ä–∞–Ω–∏–º –í–°–ï –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–∞—Ä—ã ---
  const [allLessons, setAllLessons] = useState<ScheduleEntry[]>([]);
  // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---
  const [masterLists, setMasterLists] = useState<MasterLists>({ group: null, teacher: null, office: null });
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // --- Ref –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–∂–µ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö –Ω–µ–¥–µ–ª—å ---
  const fetchedRequestsRef = useRef(new Set<string>());

  // ---
  // ---
  // --- –ù–û–í–´–ô –≠–§–§–ï–ö–¢ –î–õ–Ø –û–ß–ò–°–¢–ö–ò –ö–≠–®–ê ---
  // ---
  // ---
  // –≠—Ç–æ—Ç —ç—Ñ—Ñ–µ–∫—Ç —Å–ª–µ–¥–∏—Ç –∑–∞ searchQuery –∏ searchType.
  // –ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∏ –º–µ–Ω—è—é—Ç—Å—è (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–Ω—è–µ—Ç –≤–∫–ª–∞–¥–∫—É –∏–ª–∏ –≤—ã–±–∏—Ä–∞–µ—Ç
  // –¥—Ä—É–≥–æ–π –ø–æ–∏—Å–∫), –º—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ.
  useEffect(() => {
    console.log(`%c${LOG_PREFIX_HOOK} –°–º–µ–Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: ${searchType} / ${searchQuery}. –û—á–∏—Å—Ç–∫–∞...`, LOG_STYLE_HOOK);
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —É—Ä–æ–∫–∏
    setAllLessons([]);
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—ç—à –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö –Ω–µ–¥–µ–ª—å
    fetchedRequestsRef.current.clear();
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º isLoading, —Ç–∞–∫ –∫–∞–∫ –º—ã –±—É–¥–µ–º –∑–∞–≥—Ä—É–∂–∞—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    setIsLoading(true);
  }, [searchQuery, searchType]); // <-- –≠—Ç–æ—Ç —ç—Ñ—Ñ–µ–∫—Ç –∑–∞–≤–∏—Å–∏—Ç –¢–û–õ–¨–ö–û –æ—Ç searchQuery –∏ searchType
  // ---
  // ---
  // --- –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –≠–§–§–ï–ö–¢–ê ---
  // ---
  // ---

  // --- –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö ---
  useEffect(() => {
    
    // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –§—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –æ–∂–∏–¥–∞–µ—Ç 'startDateOfWeekStr' ---
    const fetchSchedule = async (week: number, startDateOfWeekStr: string) => {
      // setIsLoading(true); // –£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–Ω–∞—Ä—É–∂–∏
      setError(null);

      try {
        const params = new URLSearchParams({
          week: String(week),
          sem: String(semester),
          // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 'yyyy-MM-dd' —Å—Ç—Ä–æ–∫—É ---
          startDateOfWeek: startDateOfWeekStr,
        });
        
        // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ searchType –Ω–µ 'grupe', 'profesori' –∏–ª–∏ 'aule' ---
        // –≠—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Ç–∏–ø–∞, —á—Ç–æ–±—ã params.append —Ä–∞–±–æ—Ç–∞–ª
        if (searchType === 'grupe' || searchType === 'profesori' || searchType === 'aule') {
            params.append(searchType, searchQuery);
        }
        // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---

        console.log(`%c${LOG_PREFIX_REQ} –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ /api/schedule —Å–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: ${params.toString()}`, LOG_STYLE_REQ);

        const response = await fetch(`/api/schedule?${params.toString()}`);

        if (!response.ok) {
          const errorText = await response.text();
          throw new Error(`Network response was not ok (${response.status}): ${errorText}`);
        }

        const data: ScheduleResponseDto = await response.json();
        
        // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –õ–û–ì–ò–†–û–í–ê–ù–ò–ï ---
        console.log(`%c${LOG_PREFIX_API_DATA} –ü–û–õ–£–ß–ï–ù–´ –î–ê–ù–ù–´–ï (Week ${week}, Date ${startDateOfWeekStr}):`, LOG_STYLE_API_DATA, data);
        // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---

        console.log(`%c${LOG_PREFIX_RESP} –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã (–ö–ª—é—á: ${searchType}-${searchQuery}-${week}):`, LOG_STYLE_RESP, { scheduleLength: data.schedule?.length ?? 0 });

        if (!data || !Array.isArray(data.schedule) || !data.masterLists) {
             console.error(`%c${LOG_PREFIX_ERROR} –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç –±—ç–∫–µ–Ω–¥–∞.`, LOG_STYLE_ERROR, data);
             throw new Error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.");
        }

        // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ, –∞ –Ω–µ –∑–∞–º–µ–Ω—è–µ–º ---
        // –≠—Ç–∞ –ª–æ–≥–∏–∫–∞ —Ç–µ–ø–µ—Ä—å –±–µ–∑–æ–ø–∞—Å–Ω–∞, —Ç–∞–∫ –∫–∞–∫ allLessons –æ—á–∏—â–∞–µ—Ç—Å—è
        // –ø—Ä–∏ —Å–º–µ–Ω–µ query/type –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–æ–≤–æ–º—É useEffect.
        // –ú—ã –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º —É—Ä–æ–∫–∏ (–¥–ª—è —Ä–∞–∑–Ω—ã—Ö –Ω–µ–¥–µ–ª—å –æ–¥–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞).
        setAllLessons(prevLessons => {
            return [...prevLessons, ...data.schedule];
        });
        // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---

        setMasterLists(data.masterLists); // –û–±–Ω–æ–≤–ª—è–µ–º masterLists

      } catch (e: any) {
        console.error(`%c${LOG_PREFIX_ERROR} –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: ${e.message}`, LOG_STYLE_ERROR, e);
        setError(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. ${e.message}`);
        // –ù–µ –æ—á–∏—â–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å –¥—Ä—É–≥–∏–µ –Ω–µ–¥–µ–ª–∏
      } finally {
        setIsLoading(false);
        console.log(`%c${LOG_PREFIX_FINISH} fetchSchedule –∑–∞–≤–µ—Ä—à–µ–Ω (–ö–ª—é—á: ${searchType}-${searchQuery}-${week}).`, LOG_STYLE_FINISH);
      }
    };
    // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –§–£–ù–ö–¶–ò–ò ---


    // –ï—Å–ª–∏ –Ω–µ—Ç searchQuery, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –≤—ã—Ö–æ–¥–∏–º
    if (!searchQuery) {
        console.log(`%c${LOG_PREFIX_FETCH} –ù–µ—Ç searchQuery, —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è.`, LOG_STYLE_FETCH);
        // allLessons –∏ fetchedRequestsRef –£–ñ–ï –ë–´–õ–ò –æ—á–∏—â–µ–Ω—ã
        // –Ω–æ–≤—ã–º useEffect. –ù–∞–º –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤—ã–∫–ª—é—á–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É.
        setIsLoading(false);
        setError(null);
        return;
    }

    // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–ª—è –∫–∞–∂–¥–æ–π —Ç—Ä–µ–±—É–µ–º–æ–π –Ω–µ–¥–µ–ª–∏ ---
    let activeFetches = 0;
    // setIsLoading(true); // <-- –≠—Ç–æ —É–∂–µ –¥–µ–ª–∞–µ—Ç—Å—è –≤ –Ω–æ–≤–æ–º useEffect

    academicWeeks.forEach(weekToFetch => {
        const requestKey = `${searchType}-${searchQuery}-${weekToFetch}-${semester}`;

        // –ï—Å–ª–∏ –∫–ª—é—á —É–∂–µ –µ—Å—Ç—å –≤ Set, –∑–Ω–∞—á–∏—Ç, –º—ã –µ–≥–æ *—É–∂–µ* –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ (–∏–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º)
        if (fetchedRequestsRef.current.has(requestKey)) {
            // console.log(`%c${LOG_PREFIX_FETCH} –ö–ª—é—á ${requestKey} —É–∂–µ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.`, LOG_STYLE_FETCH);
            return;
        }

        // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –º—ã –Ω–∞—á–∞–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ —ç—Ç–æ–º—É –∫–ª—é—á—É
        fetchedRequestsRef.current.add(requestKey);
        activeFetches++;
        
        console.log(`%c${LOG_PREFIX_FETCH} –ó–∞–ø—É—Å–∫ fetchSchedule... –ö–ª—é—á: ${requestKey}`, LOG_STYLE_FETCH);
        
        // --- –ü–æ–ª—É—á–∞–µ–º startDateOfWeek –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏ ---
        // –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º dateContext (selectedDate –∏–∑ App.tsx) —á—Ç–æ–±—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—á–µ–±–Ω—ã–π –≥–æ–¥
        const { startDate } = getAcademicWeekInfoFromNumber(weekToFetch, dateContext);
        
        // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ 'yyyy-MM-dd' –í–ú–ï–°–¢–û .toISOString() ---
        const startDateString = format(startDate, 'yyyy-MM-dd');
        fetchSchedule(weekToFetch, startDateString);
        // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---
    });
    
    if (activeFetches === 0) {
        setIsLoading(false); // –ï—Å–ª–∏ –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–µ –±—ã–ª–æ, –≤—ã–∫–ª—é—á–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    }
    // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---

  // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞ ---
  // –≠—Ç–æ—Ç —ç—Ñ—Ñ–µ–∫—Ç —Ç–µ–ø–µ—Ä—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –í–°–ï–• –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
  // –ù–æ–≤—ã–π useEffect –≤—ã—à–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ü–ï–†–í–´–ú –ø—Ä–∏ —Å–º–µ–Ω–µ query/type,
  // –æ—á–∏—Å—Ç–∏—Ç –¥–∞–Ω–Ω—ã–µ, –∞ –ó–ê–¢–ï–ú —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ç–æ—Ç —ç—Ñ—Ñ–µ–∫—Ç –∏ –Ω–∞—á–Ω–µ—Ç
  // –Ω–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É.
  }, [searchQuery, searchType, academicWeeks, dateContext, semester]); 
  // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---


  // --- –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ ---
  // ---
  // --- 
  // --- –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ê–ì–ê ---
  // ---
  // ---
  const getScheduleForDate = useCallback((date: Date | null, query: string, type: SearchType): ScheduleEntry[] => {
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –¥–∞—Ç–∞ –∏ —É—Ä–æ–∫–∏
    if (!date || !allLessons || allLessons.length === 0) {
      return [];
    }
    
    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã 'query' –∏ 'type' –ë–û–õ–¨–®–ï –ù–ï –ù–£–ñ–ù–´ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
    // `allLessons` –£–ñ–ï —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –¢–û–õ–¨–ö–û –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ
    // `searchQuery` –∏ `searchType` (–±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–æ–≤–æ–º—É useEffect).
    // –ù–∞–º –Ω—É–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –¢–û–õ–¨–ö–û –ü–û –î–ê–¢–ï.
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    const targetDateStr = format(date, 'yyyy-MM-dd');

    // 3. –§–∏–ª—å—Ç—Ä—É–µ–º!
    const filtered = allLessons.filter(lesson => {
      // –£—Å–ª–æ–≤–∏–µ 1: –î–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å
      const dateMatch = lesson.date === targetDateStr;
      return dateMatch;
    });
    
    // console.log(`%c${LOG_PREFIX_FILTER} –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–ª—è ${targetDateStr}. –ù–∞–π–¥–µ–Ω–æ ${filtered.length} –∏–∑ ${allLessons.length}`, LOG_STYLE_FILTER);
    
    return filtered;
  }, [allLessons]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å `allLessons` –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è
  // ---
  // --- 
  // --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ë–ê–ì–ê ---
  // ---
  // ---

  // --- –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ ---
  const searchOptions = useMemo(() => {
     return {
         grupe: masterLists.group || [],
         profesori: masterLists.teacher || [],
         aule: masterLists.office || []
     };
  }, [masterLists]);


  // --- –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ö—É–∫–∞ ---
  // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ–º `allLessons` –∫–∞–∫ `schedule` ---
  return { isLoading, error, getScheduleForDate, searchOptions, schedule: allLessons };
  // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø ---
}

